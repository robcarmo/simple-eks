name: Deploy Infrastructure to AWS

on:
  push:
    branches:
      - master # Note: Changed from main if your branch is master
    paths:
      - 'infra/**'
  workflow_dispatch:  # Allows manual triggering

# Permissions required for OIDC and checking out code
permissions:
  id-token: write # Required for OIDC
  contents: read  # Required for checkout

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        # Set the working directory for all run steps in this job
        working-directory: ./infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4 # Updated to v4
        with:
          # Role ARN that the GitHub Actions runner will assume
          role-to-assume: ${{ secrets.GITHUBAWS }} # Use the secret for the role the WORKFLOW assumes
          aws-region: us-east-1 # Use the region secret

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3 # Updated to v3
        # Keeping TF version 1.0.0 as you specified, update if needed
        with:
          terraform_version: '1.0.0'
          # Add terraform_wrapper: true if using Terragrunt

      # Terraform Init no longer needs cd infra due to job defaults
      - name: Terraform Init
        id: init
        run: terraform init -input=false -reconfigure -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=infra/terraform.tfstate" -backend-config="region=us-east-1"
        env:
          # Pass AWS credentials if needed for init, though OIDC should handle it
          AWS_REGION: us-east-1

      # Terraform Plan no longer needs cd infra due to job defaults
      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false
        env:
          # Map GitHub Secrets to TF_VAR environment variables
          # These are used by the Terraform code itself (e.g., for aws-auth)
          TF_VAR_oidc_github_actions_role_arn: ${{ secrets.GITHUBAWS }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARNS_JSON }}
          TF_VAR_aws_region: us-east-1
          # Add TF_VAR_ for any other variables needed by your infra code
          # TF_VAR_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }} # Example

      # Terraform Apply no longer needs cd infra due to job defaults
      - name: Terraform Apply
        # Only run apply on pushes to the master branch
        #if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform destroy -auto-approve # -input=false tfplan
        env:
          # Repeat the environment variable mapping for the apply step
          TF_VAR_oidc_github_actions_role_arn: ${{ secrets.GITHUBAWS }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARNS_JSON }}
          TF_VAR_aws_region: us-east-1
          # Add TF_VAR_ for any other variables needed by your infra code
          # TF_VAR_cluster_name: ${{ secrets.EKS_CLUSTER_NAME }} # Example