# .github/workflows/deploy-infra.yml

name: AWS Infrastructure Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

# Permissions: Remove id-token: write, keep contents: read
permissions:
  contents: read  # Required for actions/checkout

jobs:
  manage-infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    # --- ADD Job Environment Variables for AWS Credentials ---
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1 # Or AWS_DEFAULT_REGION
    steps:
      # Step 1: Check out code (No change)
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Terraform (No change)
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.0.0'

      # Step 3: REMOVE Configure AWS credentials using OIDC step
      # - name: Configure AWS credentials using OIDC
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.githubaws }} # REMOVED
      #     aws-region: us-east-1                   # REMOVED

      # Step 4: Terraform Init (No change needed - uses job env vars)
      - name: Terraform Init
        id: init
        run: terraform init -input=false -reconfigure -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=infra/terraform.tfstate" -backend-config="region=us-east-1"
        # Removed explicit env: AWS_REGION as it's set at job level

      # Step 5: Terraform Plan (Remove OIDC TF_VAR)
      - name: Terraform Plan
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action != 'destroy')
        run: terraform plan -out=tfplan -input=false
        env:
          # REMOVE TF_VAR_oidc_github_actions_role_arn
          # TF_VAR_oidc_github_actions_role_arn: ${{ secrets.githubaws }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARN }}
          TF_VAR_admin_k8s_username: ${{ secrets.ADMIN_K8S_USERNAME }}
          # TF_VAR_aws_region: us-east-1 # Can likely remove if AWS_REGION is set at job level

      # Step 6: Terraform Apply (Remove OIDC TF_VAR)
      - name: Terraform Apply
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action != 'destroy')
        run: terraform apply -auto-approve -input=false tfplan
        env:
          # REMOVE TF_VAR_oidc_github_actions_role_arn
          # TF_VAR_oidc_github_actions_role_arn: ${{ secrets.githubaws }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARN }}
          TF_VAR_admin_k8s_username: ${{ secrets.ADMIN_K8S_USERNAME }}
          # TF_VAR_aws_region: us-east-1 # Can likely remove

      # Step 7: Terraform Destroy (Remove OIDC TF_VAR)
      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        env:
          # REMOVE TF_VAR_oidc_github_actions_role_arn
          # TF_VAR_oidc_github_actions_role_arn: ${{ secrets.githubaws }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARN }}
          TF_VAR_admin_k8s_username: ${{ secrets.ADMIN_K8S_USERNAME }}
          # TF_VAR_aws_region: us-east-1 # Can likely remove