# .github/workflows/deploy-infra.yml

name: AWS Infrastructure Management

on:
  push:
    branches:
      - master # Or your primary branch name (e.g., main)
    paths:
      - 'infra/**' # Trigger workflow only on changes within the infra directory
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

# Permissions required for OIDC authentication and checking out code
permissions:
  id-token: write # Required for aws-actions/configure-aws-credentials using OIDC
  contents: read  # Required for actions/checkout

jobs:
  manage-infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        # Set the working directory for ALL subsequent 'run' steps in this job.
        # Ensures terraform commands execute in ./infra
        working-directory: ./infra
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the desired Terraform version
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.0.0' # Specify your required Terraform version

      # Step 3: Configure AWS Credentials using OIDC Role
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # The ARN of the IAM role created specifically for GitHub Actions OIDC
          role-to-assume: ${{ secrets.githubaws }}
          aws-region: us-east-1 # Specify your target AWS region

      # Step 4: Terraform Init (Runs in ./infra due to job defaults)
      # Initializes Terraform, downloads providers, and configures the S3 backend.
      - name: Terraform Init
        id: init
        run: terraform init -input=false -reconfigure -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=infra/terraform.tfstate" -backend-config="region=us-east-1"
        env:
          AWS_REGION: us-east-1

      # Step 5: Terraform Plan (Runs in ./infra due to job defaults)
      # Creates an execution plan.
      # Runs on push OR on workflow_dispatch if action is not 'destroy'.
      - name: Terraform Plan
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action != 'destroy')
        run: terraform plan -out=tfplan -input=false
        env:
          # Environment variables needed by the Terraform configuration itself
          TF_VAR_oidc_github_actions_role_arn: ${{ secrets.githubaws }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARN }}       # Ensure secret name is correct
          TF_VAR_admin_k8s_username: ${{ secrets.ADMIN_K8S_USERNAME }}  # Ensure secret name is correct
          TF_VAR_aws_region: us-east-1

      # Step 6: Terraform Apply (Runs in ./infra due to job defaults)
      # Applies the changes defined in the plan.
      # Runs on push OR on workflow_dispatch if action is not 'destroy'.
      - name: Terraform Apply
        if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action != 'destroy')
        run: terraform apply -auto-approve -input=false tfplan
        env:
          # Repeat the TF_VARs needed during the apply phase
          TF_VAR_oidc_github_actions_role_arn: ${{ secrets.githubaws }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARN }}
          TF_VAR_admin_k8s_username: ${{ secrets.ADMIN_K8S_USERNAME }}
          TF_VAR_aws_region: us-east-1

      # Step 7: Terraform Destroy (Runs in ./infra due to job defaults)
      # Destroys the managed infrastructure.
      # Runs ONLY on workflow_dispatch if action is 'destroy'.
      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        env:
          # Repeat the TF_VARs potentially needed during the destroy phase
          TF_VAR_oidc_github_actions_role_arn: ${{ secrets.githubaws }}
          TF_VAR_admin_user_arns: ${{ secrets.ADMIN_USER_ARN }}
          TF_VAR_admin_k8s_username: ${{ secrets.ADMIN_K8S_USERNAME }}
          TF_VAR_aws_region: us-east-1