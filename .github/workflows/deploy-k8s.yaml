steps:
  # Step 1: Check out code
  - name: Checkout code
    uses: actions/checkout@v4

  # Step 2: Set up Helm
  - name: Set up Helm
    uses: azure/setup-helm@v4

  # Step 3: Update kubeconfig for EKS (Hardcoded Region)
  - name: Update kubeconfig for EKS
    run: |
      echo "Configuring kubectl for cluster: cc-eks in us-east-1"
      aws eks update-kubeconfig --name cc-eks --region us-east-1 # HARDCODED REGION

  # Step 4: Ensure Namespace Exists using kubectl apply
  - name: Ensure Namespace Exists
    run: |
      echo "Ensuring namespace '${{ env.TARGET_NAMESPACE }}' exists..."
      cat <<EOF | kubectl apply -f -
      apiVersion: v1
      kind: Namespace
      metadata:
        name: ${{ env.TARGET_NAMESPACE }}
      EOF
      echo "Namespace existence check complete."

  # Step 5: Deploy Helm Chart (Hardcoded Region in Image Path)
  - name: Deploy Helm Chart
    env:
      # Secrets needed for image path construction
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY_NAME: ${{ secrets.ECR_REPOSITORY }}
    run: |
      # Construct the full ECR image path using hardcoded region
      # Format: <ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/<REPO_NAME>
      FULL_ECR_IMAGE_PATH="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${ECR_REPOSITORY_NAME}" # HARDCODED REGION

      echo "Deploying Helm chart 'demo-service' from './helm/demo-service'"
      echo "Target namespace: ${{ env.TARGET_NAMESPACE }}"
      echo "Setting image repository to: ${FULL_ECR_IMAGE_PATH}"
      echo "Setting image tag to: latest"

      # Use backslashes for line continuation
      helm upgrade --install demo-service helm/demo-service \
        --namespace ${{ env.TARGET_NAMESPACE }} \
        --set deployment.image.repository="${FULL_ECR_IMAGE_PATH}" \
        --set deployment.image.tag="latest"

      echo "Helm deployment command executed."